{"version":3,"sources":["Search/SearchMovies.js","Search/MoviesDetails.js","Search/SearchContainer.js","Nomination/NominationDetails.js","Nomination/NominationContainer.js","Component/Header.js","App.js","reportWebVitals.js","index.js"],"names":["SearchMovies","query","handleSubmit","handleSearchInputChange","className","onSubmit","htmlFor","id","name","value","type","style","width","placeholder","aria-label","onChange","MoviesDetails","movie","nomination","addNomination","Title","Year","imdbID","Poster","src","alt","some","nominated","Button","disabled","variant","onClick","active","SearchContainer","movies","map","NominationDetails","removeNomination","NominationContainer","Header","App","useState","setQuery","setMovies","setNomination","error","setError","useEffect","nominations","localStorage","getItem","JSON","parse","Container","e","target","preventDefault","fetch","process","then","res","json","Response","Search","Error","length","includes","setItem","stringify","alert","newNomination","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03e35df7.chunk.js","sourcesContent":["import React from 'react';\n// import SearchContainer from './SearchContainer';\n\n\n\nconst SearchMovies = ({ query, handleSubmit, handleSearchInputChange }) => {\n\n    return (\n        <div className=\"searchable-movie-reviews search-container\">\n            <form className=\"form-inline\" onSubmit={handleSubmit}>\n                <label className=\"search-label\" htmlFor=\"search-input\">\n                    <input \n                        className=\"form-control mr-sm-2\"\n                        id=\"search-input\"\n                        name=\"query\"\n                        value={query}\n                        type=\"search\"\n                        style={{ width: 1000 }}\n                        placeholder=\"Search Movies...\"\n                        aria-label=\"Search\"\n                        onChange={handleSearchInputChange}\n                    />\n                    <button type=\"submit\" className=\"btn btn-outline-dark my-2 my-sm-0\">Search</button>\n                </label>\n            </form>\n         \n        </div>\n    )\n}\nexport default SearchMovies;","import React from 'react';\n// import { Card, Icon, Image } from 'semantic-ui-react'\nimport { Button } from 'react-bootstrap';\n\n\nconst MoviesDetails = ({ movie, nomination, addNomination }) => {\n    const { Title, Year, imdbID, Poster } = movie\n    return (\n            <div className=\"movie card mb-3 rounded\" style={{width: '400px'}}>\n                <div className=\"row no-gutters\">\n                    <div className=\"col-sm-4 col-md-4\">\n                        <img className=\"movie-poster\" src={Poster} alt=\"poster\" />\n                    </div>\n                    <div className=\"col-sm-8 col-md-8\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{Title}</h5>\n                            <p className=\"year card-text\">\n                                Year: {Year}\n                                {/* <br />\n                                imdbID: {imdbID} */}\n                            </p>\n                            <>\n                                {\n                                    nomination.some(nominated => nominated.imdbID === imdbID)\n                                    ? \n                                    <Button className=\"already-nominated\" disabled>Already Nominated</Button>\n                                    :\n                                    <Button className=\"nominate\" variant=\"dark\" onClick={() => addNomination(movie)} active>Nominate</Button>\n                                    \n                                }\n                            </>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default MoviesDetails;\n","import React from 'react';\nimport MoviesDetails from './MoviesDetails';\n// import { Container, Row, Col } from 'reactstrap';\n\nconst SearchContainer = ({ query, movies, nomination, addNomination }) => {\n    return (\n        // <div className=\" col-sm-9 col-md-6 col-lg-8\">\n        <div className=\"search-container border-right\">\n            <h5>Search for \"{query}\"</h5>\n            { movies.map(movie => <MoviesDetails \n                                        key={movie.imdbID} \n                                        movie={movie} \n                                        nomination={nomination} \n                                        addNomination={addNomination}  \n                                        />\n                            )\n            }\n\n        </div>\n    )\n}\nexport default SearchContainer;\n\n\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst NominationDetails = ({ nomination, removeNomination }) => {\n    const { Title, Year, imdbID, Poster } = nomination\n    return (\n            <div className=\"nomination card mb-3 rounded\" style={{width: '400px'}}>\n                <div className=\"row no-gutters\">\n                    <div className=\"col-sm-4 col-md-4\">\n                        <img className=\"movie-poster\" src={Poster} alt=\"poster\" />\n                    </div>\n                    <div className=\"col-sm-8 col-md-8\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{Title}</h5>\n                            <p className=\"year imdb card-text\">\n                                Year: {Year}\n                                {/* <br />\n                                imdbID: {imdbID} */}\n                            </p>\n                            \n                            <Button className=\"nominate\" variant=\"dark\" onClick={() => removeNomination(nomination)} active>Remove Nomination</Button>\n                                    \n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default NominationDetails;","import React from 'react';\nimport NominationDetails from './NominationDetails';\n\n\n\nconst NominationContainer = ({ nomination, removeNomination }) => {\n    return (\n        // <div className=\" col-sm-3 col-md-6 col-lg-4\">\n        <div className=\"nomination-container\">\n            <h5>Nominated Movies</h5>\n            { nomination.map(nominated => <NominationDetails nomination={nominated} removeNomination={removeNomination}/>) }\n        </div>\n    )\n}\nexport default NominationContainer;\n","import React from 'react';\nimport SearchMovies from '../Search/SearchMovies';\n\nconst Header = ({ handleSearchInputChange, handleSubmit, query}) => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-light bg-light\">\n                <div className=\"navbar-brand\">Welcome To The Shoppies Movie Award Nomination 2021!</div>\n                <SearchMovies \n                    handleSearchInputChange={handleSearchInputChange}\n                    handleSubmit={handleSubmit}\n                    query={query}\n                />\n            </nav>\n        </div>\n    )\n}\n\nexport default Header;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport SearchMovies from './Search/SearchMovies';\nimport SearchContainer from './Search/SearchContainer';\nimport NominationContainer from './Nomination/NominationContainer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container } from 'react-bootstrap';\nimport Header from './Component/Header';\n\n\n\nexport default function App() {\n  \n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [nomination, setNomination] = useState([]);\n    const [error, setError] = useState(null);\n    \n    // empty array/list to only fire the callback once\n    useEffect(() => {\n        let nominations = localStorage.getItem('nomination');\n        if (nominations !== null) {\n            setNomination(JSON.parse(nominations))\n        }\n    }, [])\n    \n    // Search Movies\n    const handleSearchInputChange = e => {\n        setQuery(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=${process.env.REACT_APP_OMDB_API_KEY}&s=${query}`)\n        .then(res => res.json())\n        .then(res => {\n            // debugger\n            // console.log(res.Search)\n            if (res.Response === \"True\") {\n                setMovies(res.Search)\n            } else if (res.Error === \"Movie Not Found\"){\n                setError(\"Movie not Found.\")\n            } else if (res.Error === \"Too many results\") {\n                setError(\"Too many results. Type a few more letters.\")\n            }\n        })\n    }\n\n    // Change in nomination list\n    const addNomination = movie => {\n        debugger\n        if (nomination.length < 5 && !nomination.includes(movie.imdbID)) {\n            debugger\n            setNomination([...nomination, movie])\n            localStorage.setItem(\"nomination\", JSON.stringify([...nomination, movie]))       \n        } else {\n            alert('You can only nominate five movies! Delete one of them and nominate again ;)')\n        }\n    }\n\n    const removeNomination = movie => {\n        debugger\n        const newNomination = [...nomination].filter(nominated => nominated !== movie)\n        setNomination(newNomination)\n        localStorage.setItem(\"nomination\", JSON.stringify(newNomination))\n    }\n\n    // handle error\n    // const handleError = () => {\n    //     error;\n    // }\n\n    return (\n        <div>\n            <Container>\n            <Header handleSearchInputChange={handleSearchInputChange}\n                    handleSubmit={handleSubmit}\n                    query={query}\n            />\n                {/* <div className=\"row\"> */}\n                    {/* <Col xs={6} sm={6} md={9} lg={9} xl={9}> */}\n                    {/* <div className=\"col-md-12\">  */}\n                        {/* <SearchMovies \n                            \n                        /> */}\n                    {/* </div> */}\n                {/* </div> */}\n   \n                <div className=\"row\">\n                     <div className=\"col-sm-6 col-md-6\">\n                        {/* <h2>Movies By Search:</h2> */}\n                        <SearchContainer \n                            movies={movies} \n                            addNomination={addNomination} \n                            nomination={nomination} \n                            error={error}\n                            query={query}\n                        />\n                    </div>\n                    {/* <Col xs={6} sm={6} md={3} lg={3} xl={3}>      */}\n                    <div className=\"col-sm-6 col-md-6\">       \n                        <NominationContainer \n                            removeNomination={removeNomination}\n                            nomination={nomination}\n                        />\n                    </div>\n                </div>\n            </Container>  \n        </div>\n    )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}